# Generated by Django 5.2 on 2025-04-10 17:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statsbomb_id', models.IntegerField(blank=True, null=True)),
                ('api_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('competition_logo_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statsbomb_id', models.IntegerField(blank=True, null=True)),
                ('api_id', models.IntegerField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('football_crest_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statsbomb_id', models.IntegerField(blank=True, null=True)),
                ('api_id', models.IntegerField(blank=True, null=True)),
                ('api_creation_day', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Scheduled', 'Scheduled'), ('In progress', 'In progress'), ('Finished', 'Finished')], default='Finished', max_length=20)),
                ('season_name', models.CharField(max_length=100)),
                ('genre', models.CharField(max_length=20)),
                ('date', models.DateTimeField()),
                ('match_week', models.IntegerField()),
                ('stadium', models.CharField(max_length=255)),
                ('home_team_coach_name', models.CharField(blank=True, max_length=255, null=True)),
                ('away_team_coach_name', models.CharField(blank=True, max_length=255, null=True)),
                ('goals_scored_home_team', models.IntegerField(blank=True, default=0, null=True)),
                ('goals_scored_away_team', models.IntegerField(blank=True, default=0, null=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='matches.competition')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='matches.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='matches.team')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('index', models.IntegerField()),
                ('minute', models.IntegerField()),
                ('second', models.IntegerField()),
                ('period', models.IntegerField()),
                ('type', models.CharField(choices=[('Teams won prediction', 'Teams won prediction'), ('Lineup', 'Lineup'), ('Ball Receipt', 'Ball Receipt'), ('Ball Recovery', 'Ball Recovery'), ('Dispossessed', 'Dispossessed'), ('Duel', 'Duel'), ('Block', 'Block'), ('Offside', 'Offside'), ('Clearance', 'Clearance'), ('Interception', 'Interception'), ('Dribble', 'Dribble'), ('Shot', 'Shot'), ('Pressure', 'Pressure'), ('Half Start', 'Half Start'), ('Substitution', 'Substitution'), ('Own Goal Against', 'Own Goal Against'), ('Foul Won', 'Foul Won'), ('Foul Committed', 'Foul Committed'), ('Goal Keeper', 'Goal Keeper'), ('Bad Behaviour', 'Bad Behaviour'), ('Own Goal For', 'Own Goal For'), ('Player On', 'Player On'), ('Player Off', 'Player Off'), ('Shield', 'Shield'), ('Pass', 'Pass'), ('50/50', '50/50'), ('Half End', 'Half End'), ('Error', 'Error'), ('Miscontrol', 'Miscontrol'), ('Dribbled Past', 'Dribbled Past'), ('Injury Stoppage', 'Injury Stoppage'), ('Referee Ball-Drop', 'Referee Ball-Drop'), ('Carry', 'Carry')], max_length=50)),
                ('details', models.JSONField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='matches.match')),
                ('team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='matches.team')),
            ],
        ),
        migrations.CreateModel(
            name='UserFavoriteMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_matches', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserFavoriteTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.team')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_teams', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserTimesAnalyzedMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('times_analyzed', models.IntegerField(default=0)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='matches.match')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyzed_matches', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
